services:

  timescaledb:
    image: timescale/timescaledb:2.19.1-pg17
    container_name: tsdb
    #healthcheck:
      #test: ["CMD-SHELL", "pg_isready -U karol -d tsdb"]
      #interval: 5s
      #timeout: 5s
      #retries: 10
    environment:
      POSTGRES_USER: karol
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: tsdb
    ports:
      - "5432:5432"
    restart: no
    volumes:
      - tsdb-regaty:/var/lib/postgresql/data
      - ./tsdb/db_setup.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - regaty-network


  broker: # for production consider disabling automatic topic creation
    image: apache/kafka:4.0.0
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # setup three listeners, one for internal access, one for external access, one controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://0.0.0.0:29092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,EXTERNAL://localhost:29092
      # set security protocols
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      # specify the listener for internal communication
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # setup the controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      # set up replication and partitioning
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 1 # might need adjusting later
    ports:
      - "29092:29092"
    volumes:
      - kafka-regaty:/tmp/broker-logs
    networks:
      - regaty-network
    
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
    depends_on:
      - broker
    networks:
      - regaty-network

  
volumes:
  tsdb-regaty:
  kafka-regaty:

networks:
  regaty-network:
    name: regaty-network
    driver: bridge
    external: true
  # default:
  #   external: false
  #   name: none